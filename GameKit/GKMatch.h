/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "GKSessionDelegate-Protocol.h"
#import "GKSessionPrivateDelegate-Protocol.h"

@class GKConnection, GKSession, NSArray, NSData, NSMutableArray, NSMutableDictionary;

@interface GKMatch : NSObject <GKSessionDelegate, GKSessionPrivateDelegate>
{
    id <GKMatchDelegate> _delegate;
    GKSession *_session;
    GKConnection *_connection;
    unsigned int _expectedPlayerCount;
    NSMutableDictionary *_playerEventQueues;
    NSMutableArray *_reinvitedPlayers;
    NSData *_selfBlob;
    unsigned char _version;
    id <GKMatchDelegate> _inviteDelegate;
    unsigned int _packetSequenceNumber;
    NSMutableDictionary *_playerPushTokens;
    NSMutableArray *_opponentIDs;
}

@property(retain, nonatomic) NSMutableArray *opponentIDs; // @synthesize opponentIDs=_opponentIDs;
@property(retain, nonatomic) NSMutableDictionary *playerPushTokens; // @synthesize playerPushTokens=_playerPushTokens;
@property(nonatomic) unsigned int packetSequenceNumber; // @synthesize packetSequenceNumber=_packetSequenceNumber;
@property(nonatomic) id <GKMatchDelegate> inviteDelegate; // @synthesize inviteDelegate=_inviteDelegate;
@property(nonatomic) unsigned char version; // @synthesize version=_version;
@property(retain, nonatomic) NSData *selfBlob; // @synthesize selfBlob=_selfBlob;
@property(retain, nonatomic) NSMutableArray *reinvitedPlayers; // @synthesize reinvitedPlayers=_reinvitedPlayers;
@property(retain, nonatomic) NSMutableDictionary *playerEventQueues; // @synthesize playerEventQueues=_playerEventQueues;
@property(readonly, nonatomic) unsigned int expectedPlayerCount; // @synthesize expectedPlayerCount=_expectedPlayerCount;
@property(retain, nonatomic) GKConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) GKSession *session; // @synthesize session=_session;
@property(nonatomic) id <GKMatchDelegate> delegate; // @synthesize delegate=_delegate;
- (id)dataFromBase64String:(id)arg1;
- (void)session:(id)arg1 updateRelay:(id)arg2 forPeer:(id)arg3;
- (void)session:(id)arg1 initiateRelay:(id)arg2 forPeer:(id)arg3;
- (BOOL)shouldStartRelay:(id)arg1;
- (void)preemptRelay:(id)arg1;
- (void)initRelayResponse:(id)arg1 playerID:(id)arg2;
- (void)acceptRelayResponse:(id)arg1 playerID:(id)arg2;
- (void)updateRelayConnectionForPlayer:(id)arg1;
- (void)initRelayConnectionForPlayer:(id)arg1;
- (void)updateRelayInfoFromCallback:(id)arg1 forPlayer:(id)arg2;
- (void)initRelayInfoFromCallback:(id)arg1 forPlayer:(id)arg2;
- (void)requestRelayUpdateForPlayer:(id)arg1;
- (void)requestRelayInitForPlayer:(id)arg1;
- (void)updateRelayInfo:(id)arg1 forPlayer:(id)arg2;
- (void)initRelayInfoFromPush:(id)arg1 forPlayer:(id)arg2;
- (void)initRelayInfoFromServerResponse:(id)arg1 forPlayer:(id)arg2;
- (void)relayPush:(id)arg1;
- (void)relayPushNotification:(id)arg1;
- (void)receiveData:(id)arg1 fromPeer:(id)arg2 inSession:(id)arg3 context:(void *)arg4;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)session:(id)arg1 connectionWithPeerFailed:(id)arg2 withError:(id)arg3;
- (void)session:(id)arg1 peer:(id)arg2 didChangeState:(int)arg3;
- (void)conditionallyRelaunchPlayer:(id)arg1;
- (void)conditionallyReinvitePlayer:(id)arg1 sessionToken:(id)arg2;
- (void)reinviteeDeclinedNotification:(id)arg1;
- (void)reinviteeAcceptedNotification:(id)arg1;
- (void)sendStateCallbackForPlayer:(id)arg1 state:(int)arg2;
- (void)updateStateForPlayer:(id)arg1 state:(int)arg2;
- (void)deferStateCallbackForPlayer:(id)arg1 state:(int)arg2;
- (void)sendQueuedPacketsForPlayer:(id)arg1;
- (void)sendData:(id)arg1 fromPlayer:(id)arg2;
- (void)queueData:(id)arg1 forPlayer:(id)arg2;
- (id)peerFromPlayer:(id)arg1;
- (id)playerFromPeer:(id)arg1;
- (id)voiceChatWithName:(id)arg1;
- (void)disconnect;
- (void)sendVersionData:(unsigned char)arg1 toPeer:(id)arg2;
- (void)sendVersionData:(unsigned char)arg1;
- (BOOL)sendInviteData:(id)arg1 error:(id *)arg2;
- (BOOL)sendDataToAllPlayers:(id)arg1 withDataMode:(int)arg2 error:(id *)arg3;
- (BOOL)sendData:(id)arg1 toPlayers:(id)arg2 withDataMode:(int)arg3 error:(id *)arg4;
- (id)packet:(unsigned char)arg1 data:(id)arg2;
- (void)inviteeComboMatched:(int)arg1;
- (void)connectToPeersWithDictionaries:(id)arg1 version:(unsigned char)arg2 sessionToken:(id)arg3 cdxTicket:(id)arg4;
- (void)preLoadInviter:(id)arg1 sessionToken:(id)arg2;
- (void)getLocalConnectionDataWithCompletionHandler:(id)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)connected:(id)arg1;
- (id)allIDs;
@property(readonly, nonatomic) NSArray *playerIDs;

@end

