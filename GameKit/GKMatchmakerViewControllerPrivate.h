/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <GameKit/GKTableViewController.h>

#import "GKFriendPickerViewControllerDelegate-Protocol.h"
#import "GKMatchDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class AVAudioPlayer, GKFriendPickerViewController, GKGameDetailHeaderView, GKInvite, GKMatch, GKMatchRequest, GKMatchmakerNavView, GKMatchmakerViewController, GKPlayer, GKTableView, GKUITheme, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, UIActivityIndicatorView, UIAlertView, UIButton, UILabel, UIView;

@interface GKMatchmakerViewControllerPrivate : GKTableViewController <UITableViewDelegate, UITableViewDataSource, UIActionSheetDelegate, GKFriendPickerViewControllerDelegate, GKMatchDelegate>
{
    id <GKMatchmakerViewControllerDelegate> _delegate;
    GKMatchRequest *_matchRequest;
    GKInvite *_acceptedInvite;
    BOOL _hosted;
    BOOL _reachable;
    GKMatch *_match;
    BOOL _loadingFriends;
    BOOL _loadingFriendsFailed;
    BOOL _sentAccept;
    BOOL _geniusMatching;
    BOOL _didLayout;
    BOOL _setupNotifications;
    GKUITheme *_theme;
    GKMatchmakerNavView *_navView;
    UIActivityIndicatorView *_navSpinner;
    UIView *_matchingView;
    GKTableView *_friendTable;
    GKGameDetailHeaderView *_headerView;
    UILabel *_footerLabel;
    UIView *_addRemovePlayersView;
    UIButton *_addPlayerButton;
    UIButton *_removePlayerButton;
    NSMutableArray *_invitedFriends;
    NSMutableDictionary *_ranks;
    NSMutableArray *_friendPlayers;
    NSMutableArray *_declinedPlayers;
    NSArray *_playersToInvite;
    int _numberOfInvitesRemaining;
    int _numberAccepted;
    GKFriendPickerViewController *_friendPicker;
    UIAlertView *_alert;
    struct UIEdgeInsets _formSheetInsets;
    GKPlayer *_emptyPlayer;
    int _pushStatus;
    BOOL _waitingToShowFriendPicker;
    BOOL _loadingExistingPlayers;
    int _automatchActivity;
    NSString *_defaultInvitationMessage;
    AVAudioPlayer *_audioPlayer;
    NSDictionary *_pushTokens;
}

@property(retain, nonatomic) NSDictionary *pushTokens; // @synthesize pushTokens=_pushTokens;
@property(retain, nonatomic) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(copy, nonatomic) NSString *defaultInvitationMessage; // @synthesize defaultInvitationMessage=_defaultInvitationMessage;
@property(nonatomic) int automatchActivity; // @synthesize automatchActivity=_automatchActivity;
@property(nonatomic) BOOL loadingExistingPlayers; // @synthesize loadingExistingPlayers=_loadingExistingPlayers;
@property(nonatomic) BOOL waitingToShowFriendPicker; // @synthesize waitingToShowFriendPicker=_waitingToShowFriendPicker;
@property(nonatomic) int pushStatus; // @synthesize pushStatus=_pushStatus;
@property(retain, nonatomic) GKPlayer *emptyPlayer; // @synthesize emptyPlayer=_emptyPlayer;
@property(nonatomic) struct UIEdgeInsets formSheetInsets; // @synthesize formSheetInsets=_formSheetInsets;
@property(nonatomic) UIAlertView *alert; // @synthesize alert=_alert;
@property(retain, nonatomic) GKFriendPickerViewController *friendPicker; // @synthesize friendPicker=_friendPicker;
@property(nonatomic) int numberAccepted; // @synthesize numberAccepted=_numberAccepted;
@property(nonatomic) int numberOfInvitesRemaining; // @synthesize numberOfInvitesRemaining=_numberOfInvitesRemaining;
@property(nonatomic) NSArray *playersToInvite; // @synthesize playersToInvite=_playersToInvite;
@property(retain, nonatomic) NSMutableArray *declinedPlayers; // @synthesize declinedPlayers=_declinedPlayers;
@property(retain, nonatomic) NSMutableArray *friendPlayers; // @synthesize friendPlayers=_friendPlayers;
@property(retain, nonatomic) NSMutableDictionary *ranks; // @synthesize ranks=_ranks;
@property(retain, nonatomic) NSMutableArray *invitedFriends; // @synthesize invitedFriends=_invitedFriends;
@property(retain, nonatomic) UIButton *removePlayerButton; // @synthesize removePlayerButton=_removePlayerButton;
@property(retain, nonatomic) UIButton *addPlayerButton; // @synthesize addPlayerButton=_addPlayerButton;
@property(retain, nonatomic) UIView *addRemovePlayersView; // @synthesize addRemovePlayersView=_addRemovePlayersView;
@property(retain, nonatomic) UILabel *footerLabel; // @synthesize footerLabel=_footerLabel;
@property(retain, nonatomic) GKGameDetailHeaderView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) GKTableView *friendTable; // @synthesize friendTable=_friendTable;
@property(retain, nonatomic) UIView *matchingView; // @synthesize matchingView=_matchingView;
@property(retain, nonatomic) UIActivityIndicatorView *navSpinner; // @synthesize navSpinner=_navSpinner;
@property(retain, nonatomic) GKMatchmakerNavView *navView; // @synthesize navView=_navView;
@property(retain, nonatomic) GKUITheme *theme; // @synthesize theme=_theme;
@property(nonatomic) BOOL setupNotifications; // @synthesize setupNotifications=_setupNotifications;
@property(nonatomic) BOOL didLayout; // @synthesize didLayout=_didLayout;
@property(nonatomic) BOOL geniusMatching; // @synthesize geniusMatching=_geniusMatching;
@property(nonatomic) BOOL sentAccept; // @synthesize sentAccept=_sentAccept;
@property(nonatomic) BOOL loadingFriendsFailed; // @synthesize loadingFriendsFailed=_loadingFriendsFailed;
@property(nonatomic) BOOL loadingFriends; // @synthesize loadingFriends=_loadingFriends;
@property(retain, nonatomic) GKMatch *match; // @synthesize match=_match;
@property(nonatomic) BOOL reachable; // @synthesize reachable=_reachable;
@property(nonatomic, getter=isHosted) BOOL hosted; // @synthesize hosted=_hosted;
@property(retain, nonatomic) GKInvite *acceptedInvite; // @synthesize acceptedInvite=_acceptedInvite;
@property(retain, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
@property(nonatomic) id <GKMatchmakerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)match:(id)arg1 player:(id)arg2 didChangeState:(int)arg3;
- (void)match:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3;
- (void)match:(id)arg1 didFailWithError:(id)arg2;
- (void)match:(id)arg1 connectionWithPlayerFailed:(id)arg2 withError:(id)arg3;
- (void)playerDisconnected:(id)arg1;
- (void)playerConnected:(id)arg1;
- (BOOL)haveConnectingPlayers;
- (void)inviteMessagePlayerStatusFromBytes:(const char *)arg1 withLength:(unsigned int)arg2;
- (void)updatePlayersUsingStatusInfo:(id)arg1 andLoadedPlayers:(id)arg2;
- (void)sendStatusUpdate;
- (void)playersToInvite:(id)arg1;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (void)inviterCancelledNotification:(id)arg1;
- (void)inviteeDeclinedNotification:(id)arg1;
- (void)inviteeAcceptedNotification:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)friendPickerViewController:(id)arg1 didFinishWithPlayers:(id)arg2 inviteMessage:(id)arg3;
- (void)invitePlayers:(id)arg1 withMessage:(id)arg2;
- (void)invitePlayers:(id)arg1 withMessage:(id)arg2 connectionData:(id)arg3;
- (void)failedToInvitePlayers:(id)arg1;
- (void)revertToEmptyPlayer:(id)arg1 animated:(BOOL)arg2;
- (void)revertToEmptyPlayer:(id)arg1;
- (void)updateCellForPlayer:(id)arg1;
- (void)updateAddRemovePlayerButtons;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (float)marginForTableView:(id)arg1;
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (float)tableView:(id)arg1 heightForHeaderInSection:(int)arg2;
- (int)numberOfSectionsInTableView:(id)arg1;
- (void)showAlertForTag:(int)arg1;
- (void)cancelAlertWithoutDelegateCallback;
- (void)cancelInviteForPlayerAtIndex:(unsigned int)arg1;
- (void)showFriendPicker;
- (void)checkIfPushEnabled;
- (void)finishWithError:(id)arg1;
- (void)finishWithPlayers:(id)arg1;
- (void)finishWithMatch:(id)arg1;
- (void)cancel;
- (void)cleanupStateForCancelOrError;
- (void)cancelPendingInvitesAndMarkInviteComplete:(BOOL)arg1;
- (void)cancelButtonPressed;
- (void)doneInvitingFindMorePlayers:(BOOL)arg1;
- (void)play;
- (BOOL)showAlertIfPendingInvites;
- (void)acceptInvite;
- (void)acceptHostedInvite;
- (void)failedToAcceptInviteWithError:(id)arg1;
- (void)setHostedPlayer:(id)arg1 connected:(BOOL)arg2;
- (void)removePlayer;
- (void)addPlayer;
- (id)acceptedPlayerIDs;
- (int)indexOfPlayer:(id)arg1;
- (id)invitedPlayerWithID:(id)arg1;
- (void)cancelGeniusMatchmaking;
- (void)matchmakingDidCancel;
- (void)setupForGeniusMatchmaking;
- (void)setPlayerRangeText;
- (void)removeMatchingView;
- (void)showMatchingView;
- (void)layoutSubviewsForInterfaceOrientation:(int)arg1;
- (void)updateNavViewLayoutForOrientation:(int)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)resetUninvolvedPlayersWithAnimation:(BOOL)arg1;
- (void)queryGroupActivity;
- (void)updateWaitTime;
- (void)loadRanksForPlayerIDs:(id)arg1;
- (void)loadRanks;
- (void)loadFriends;
- (void)authenticatedStatusChanged;
- (void)applicationWillEnterForeground;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)loadView;
- (void)dealloc;
- (void)addPlayersToMatch:(id)arg1;
- (id)initWithInvite:(id)arg1;
- (id)initWithMatchRequest:(id)arg1;
- (id)initWithStyle:(int)arg1;
@property(readonly, nonatomic) GKMatchmakerViewController *matchmakerViewController; // @dynamic matchmakerViewController;

@end

