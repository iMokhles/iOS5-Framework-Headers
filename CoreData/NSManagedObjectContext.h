/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "NSCoding-Protocol.h"
#import "NSLocking-Protocol.h"

@class NSMutableSet, NSUndoManager;

@interface NSManagedObjectContext : NSObject <NSCoding, NSLocking>
{
    int _spinLock;
    id _parentObjectStore;
    NSUndoManager *_undoManager;
    void *_dispatchQueue;
    struct _managedObjectContextFlags {
        unsigned int _registeredForCallback:1;
        unsigned int _propagatesDeletesAtEndOfEvent:1;
        unsigned int _exhaustiveValidation:1;
        unsigned int _processingChanges:1;
        unsigned int _useCommittedSnapshot:1;
        unsigned int _registeredUndoTransactionID:1;
        unsigned int _retainsAllRegisteredObjects:1;
        unsigned int _savingInProgress:1;
        unsigned int _wasDisposed:1;
        unsigned int _unprocessedChangesPending:1;
        unsigned int _isDirty:1;
        unsigned int _ignoreUndoCheckpoints:1;
        unsigned int _propagatingDeletes:1;
        unsigned int _isNSEditorEditing:1;
        unsigned int _isMainThreadBlessed:1;
        unsigned int _isImportContext:1;
        unsigned int _preflightSaveInProgress:1;
        unsigned int _disableDiscardEditing:1;
        unsigned int _isParentStoreContext:1;
        unsigned int _postSaveNotifications:1;
        unsigned int _reservedFlags:12;
    } _flags;
    NSMutableSet *_unprocessedChanges;
    NSMutableSet *_unprocessedDeletes;
    NSMutableSet *_unprocessedInserts;
    NSMutableSet *_insertedObjects;
    NSMutableSet *_deletedObjects;
    NSMutableSet *_changedObjects;
    NSMutableSet *_lockedObjects;
    NSMutableSet *_refreshedObjects;
    id _infoByGID;
    id *_cachedObsInfoByEntity;
    short _undoTransactionID;
    id _lock;
    long _lockCount;
    long _objectStoreLockCount;
    double _fetchTimestamp;
    id _delegate;
    id _referenceQueue;
    id _userinfo;
    id _mergePolicy;
    int _cd_rc;
    int _ignoreChangeNotification;
    id _editors;
    id *_debuggingRecords;
    id _childObjectStores;
    id _reserved2;
}

+ (void)initialize;
+ (BOOL)accessInstanceVariablesDirectly;
+ (void)__Multithreading_Violation_AllThatIsLeftToUsIsHonor__;
- (void)_setPersistentStoreCoordinator:(id)arg1;
- (void)setPersistentStoreCoordinator:(id)arg1;
- (id)persistentStoreCoordinator;
- (void)_setRetainsRegisteredObjects:(BOOL)arg1;
- (void)setRetainsRegisteredObjects:(BOOL)arg1;
- (BOOL)retainsRegisteredObjects;
- (void)setMergePolicy:(id)arg1;
- (id)mergePolicy;
- (id)init;
- (id)retain;
- (oneway void)release;
- (unsigned int)retainCount;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (void)reset;
- (void)_dealloc__;
- (void)dealloc;
- (void)finalize;
- (double)stalenessInterval;
- (void)setStalenessInterval:(double)arg1;
- (void)_setUndoManager:(id)arg1;
- (void)setUndoManager:(id)arg1;
- (id)undoManager;
- (void)processPendingChanges;
- (void)assignObject:(id)arg1 toPersistentStore:(id)arg2;
- (id)updatedObjects;
- (id)registeredObjects;
- (id)insertedObjects;
- (id)deletedObjects;
- (BOOL)propagatesDeletesAtEndOfEvent;
- (void)setPropagatesDeletesAtEndOfEvent:(BOOL)arg1;
- (id)objectRegisteredForID:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)insertObject:(id)arg1;
- (void)deleteObject:(id)arg1;
- (BOOL)hasChanges;
- (BOOL)obtainPermanentIDsForObjects:(id)arg1 error:(id *)arg2;
- (BOOL)save:(id *)arg1;
- (id)objectWithID:(id)arg1;
- (id)existingObjectWithID:(id)arg1 error:(id *)arg2;
- (unsigned int)countForFetchRequest:(id)arg1 error:(id *)arg2;
- (id)executeFetchRequest:(id)arg1 error:(id *)arg2;
- (void)rollback;
- (void)refreshObject:(id)arg1 mergeChanges:(BOOL)arg2;
- (void)undo;
- (void)redo;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)detectConflictsForObject:(id)arg1;
- (void)lock;
- (BOOL)tryLock;
- (void)unlock;
- (void)_mergeChangesFromDidSaveDictionary:(id)arg1 usingObjectIDs:(BOOL)arg2;
- (void)mergeChangesFromContextDidSaveNotification:(id)arg1;
- (id)initWithConcurrencyType:(unsigned int)arg1;
- (void)performBlock:(id)arg1;
- (void)performBlockAndWait:(id)arg1;
- (id)userInfo;
- (void)_setParentContext:(id)arg1;
- (void)setParentContext:(id)arg1;
- (id)parentContext;
- (unsigned int)concurrencyType;

@end

