/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

@class EAGLContext, EAGLSharegroup;

#pragma mark Named Structures

struct _EAGLContextPrivate {
    EAGLContext *_field1;
    EAGLSharegroup *_field2;
    unsigned int _field3;
    unsigned int _field4;
    struct __GLIContextRec *_field5;
    struct __GLIFunctionDispatchRec _field6;
    struct __GLIFunctionDispatchRec _field7;
};

struct _EAGLSharegroupPrivate {
    unsigned int _field1;
    int _field2;
    _Bool _field3;
    struct __GLDPixelFormatRec _field4;
    struct __GLISharedRec *_field5;
    void *_field6;
};

struct __GLDPixelFormatRec {
    struct __GLDPixelFormatRec *next_pixel_format;
    unsigned int renderer_id;
    unsigned int os_support;
    unsigned int buffer_mode;
    unsigned int color_mode;
    unsigned int accum_mode;
    unsigned int depth_mode;
    unsigned int stencil_mode;
    short spad0;
    short aux_buffers;
    short sample_buffers;
    short samples;
    unsigned int sample_mode;
    unsigned char sample_alpha;
    unsigned char bpad1;
    unsigned char bpad2;
    unsigned char bpad3;
    unsigned int display_mask;
};

struct __GLIFunctionDispatchRec {
    void *accum;
    void *alpha_func;
    void *are_textures_resident;
    void *array_element;
    void *begin;
    void *bind_texture;
    void *bitmap;
    void *blend_func;
    void *call_list;
    void *call_lists;
    void *clear;
    void *clear_accum;
    void *clear_color;
    void *clear_depth;
    void *clear_index;
    void *clear_stencil;
    void *clip_plane;
    void *color3b;
    void *color3bv;
    void *color3d;
    void *color3dv;
    void *color3f;
    void *color3fv;
    void *color3i;
    void *color3iv;
    void *color3s;
    void *color3sv;
    void *color3ub;
    void *color3ubv;
    void *color3ui;
    void *color3uiv;
    void *color3us;
    void *color3usv;
    void *color4b;
    void *color4bv;
    void *color4d;
    void *color4dv;
    void *color4f;
    void *color4fv;
    void *color4i;
    void *color4iv;
    void *color4s;
    void *color4sv;
    void *color4ub;
    void *color4ubv;
    void *color4ui;
    void *color4uiv;
    void *color4us;
    void *color4usv;
    void *color_mask;
    void *color_material;
    void *color_pointer;
    void *copy_pixels;
    void *copy_tex_image1D;
    void *copy_tex_image2D;
    void *copy_tex_sub_image1D;
    void *copy_tex_sub_image2D;
    void *cull_face;
    void *delete_lists;
    void *delete_textures;
    void *depth_func;
    void *depth_mask;
    void *depth_range;
    void *disable;
    void *disable_client_state;
    void *draw_arrays;
    void *draw_buffer;
    void *draw_elements;
    void *draw_pixels;
    void *edge_flag;
    void *edge_flag_pointer;
    void *edge_flagv;
    void *enable;
    void *enable_client_state;
    void *end;
    void *end_list;
    void *eval_coord1d;
    void *eval_coord1dv;
    void *eval_coord1f;
    void *eval_coord1fv;
    void *eval_coord2d;
    void *eval_coord2dv;
    void *eval_coord2f;
    void *eval_coord2fv;
    void *eval_mesh1;
    void *eval_mesh2;
    void *eval_point1;
    void *eval_point2;
    void *feedback_buffer;
    void *finish;
    void *flush;
    void *fogf;
    void *fogfv;
    void *fogi;
    void *fogiv;
    void *front_face;
    void *frustum;
    void *gen_lists;
    void *gen_textures;
    void *get_booleanv;
    void *get_clip_plane;
    void *get_doublev;
    void *get_error;
    void *get_floatv;
    void *get_integerv;
    void *get_lightfv;
    void *get_lightiv;
    void *get_mapdv;
    void *get_mapfv;
    void *get_mapiv;
    void *get_materialfv;
    void *get_materialiv;
    void *get_pixel_mapfv;
    void *get_pixel_mapuiv;
    void *get_pixel_mapusv;
    void *get_pointerv;
    void *get_polygon_stipple;
    void *get_string;
    void *get_tex_envfv;
    void *get_tex_enviv;
    void *get_tex_gendv;
    void *get_tex_genfv;
    void *get_tex_geniv;
    void *get_tex_image;
    void *get_tex_level_parameterfv;
    void *get_tex_level_parameteriv;
    void *get_tex_parameterfv;
    void *get_tex_parameteriv;
    void *hint;
    void *index_mask;
    void *index_pointer;
    void *indexd;
    void *indexdv;
    void *indexf;
    void *indexfv;
    void *indexi;
    void *indexiv;
    void *indexs;
    void *indexsv;
    void *indexub;
    void *indexubv;
    void *init_names;
    void *interleaved_arrays;
    void *is_enabled;
    void *is_list;
    void *is_texture;
    void *light_modelf;
    void *light_modelfv;
    void *light_modeli;
    void *light_modeliv;
    void *lightf;
    void *lightfv;
    void *lighti;
    void *lightiv;
    void *line_stipple;
    void *line_width;
    void *list_base;
    void *load_identity;
    void *load_matrixd;
    void *load_matrixf;
    void *load_name;
    void *logic_op;
    void *map1d;
    void *map1f;
    void *map2d;
    void *map2f;
    void *map_grid1d;
    void *map_grid1f;
    void *map_grid2d;
    void *map_grid2f;
    void *materialf;
    void *materialfv;
    void *materiali;
    void *materialiv;
    void *matrix_mode;
    void *mult_matrixd;
    void *mult_matrixf;
    void *new_list;
    void *normal3b;
    void *normal3bv;
    void *normal3d;
    void *normal3dv;
    void *normal3f;
    void *normal3fv;
    void *normal3i;
    void *normal3iv;
    void *normal3s;
    void *normal3sv;
    void *normal_pointer;
    void *ortho;
    void *pass_through;
    void *pixel_mapfv;
    void *pixel_mapuiv;
    void *pixel_mapusv;
    void *pixel_storef;
    void *pixel_storei;
    void *pixel_transferf;
    void *pixel_transferi;
    void *pixel_zoom;
    void *point_size;
    void *polygon_mode;
    void *polygon_offset;
    void *polygon_stipple;
    void *pop_attrib;
    void *pop_client_attrib;
    void *pop_matrix;
    void *pop_name;
    void *prioritize_textures;
    void *push_attrib;
    void *push_client_attrib;
    void *push_matrix;
    void *push_name;
    void *raster_pos2d;
    void *raster_pos2dv;
    void *raster_pos2f;
    void *raster_pos2fv;
    void *raster_pos2i;
    void *raster_pos2iv;
    void *raster_pos2s;
    void *raster_pos2sv;
    void *raster_pos3d;
    void *raster_pos3dv;
    void *raster_pos3f;
    void *raster_pos3fv;
    void *raster_pos3i;
    void *raster_pos3iv;
    void *raster_pos3s;
    void *raster_pos3sv;
    void *raster_pos4d;
    void *raster_pos4dv;
    void *raster_pos4f;
    void *raster_pos4fv;
    void *raster_pos4i;
    void *raster_pos4iv;
    void *raster_pos4s;
    void *raster_pos4sv;
    void *read_buffer;
    void *read_pixels;
    void *rectd;
    void *rectdv;
    void *rectf;
    void *rectfv;
    void *recti;
    void *rectiv;
    void *rects;
    void *rectsv;
    void *render_mode;
    void *rotated;
    void *rotatef;
    void *scaled;
    void *scalef;
    void *scissor;
    void *select_buffer;
    void *shade_model;
    void *stencil_func;
    void *stencil_mask;
    void *stencil_op;
    void *tex_coord1d;
    void *tex_coord1dv;
    void *tex_coord1f;
    void *tex_coord1fv;
    void *tex_coord1i;
    void *tex_coord1iv;
    void *tex_coord1s;
    void *tex_coord1sv;
    void *tex_coord2d;
    void *tex_coord2dv;
    void *tex_coord2f;
    void *tex_coord2fv;
    void *tex_coord2i;
    void *tex_coord2iv;
    void *tex_coord2s;
    void *tex_coord2sv;
    void *tex_coord3d;
    void *tex_coord3dv;
    void *tex_coord3f;
    void *tex_coord3fv;
    void *tex_coord3i;
    void *tex_coord3iv;
    void *tex_coord3s;
    void *tex_coord3sv;
    void *tex_coord4d;
    void *tex_coord4dv;
    void *tex_coord4f;
    void *tex_coord4fv;
    void *tex_coord4i;
    void *tex_coord4iv;
    void *tex_coord4s;
    void *tex_coord4sv;
    void *tex_coord_pointer;
    void *tex_envf;
    void *tex_envfv;
    void *tex_envi;
    void *tex_enviv;
    void *tex_gend;
    void *tex_gendv;
    void *tex_genf;
    void *tex_genfv;
    void *tex_geni;
    void *tex_geniv;
    void *tex_image1D;
    void *tex_image2D;
    void *tex_parameterf;
    void *tex_parameterfv;
    void *tex_parameteri;
    void *tex_parameteriv;
    void *tex_sub_image1D;
    void *tex_sub_image2D;
    void *translated;
    void *translatef;
    void *vertex2d;
    void *vertex2dv;
    void *vertex2f;
    void *vertex2fv;
    void *vertex2i;
    void *vertex2iv;
    void *vertex2s;
    void *vertex2sv;
    void *vertex3d;
    void *vertex3dv;
    void *vertex3f;
    void *vertex3fv;
    void *vertex3i;
    void *vertex3iv;
    void *vertex3s;
    void *vertex3sv;
    void *vertex4d;
    void *vertex4dv;
    void *vertex4f;
    void *vertex4fv;
    void *vertex4i;
    void *vertex4iv;
    void *vertex4s;
    void *vertex4sv;
    void *vertex_pointer;
    void *viewport;
    void *blend_func_separate;
    void *blend_color;
    void *blend_equation;
    void *lock_arrays_EXT;
    void *unlock_arrays_EXT;
    void *client_active_texture;
    void *active_texture;
    void *multi_tex_coord1d;
    void *multi_tex_coord1dv;
    void *multi_tex_coord1f;
    void *multi_tex_coord1fv;
    void *multi_tex_coord1i;
    void *multi_tex_coord1iv;
    void *multi_tex_coord1s;
    void *multi_tex_coord1sv;
    void *multi_tex_coord2d;
    void *multi_tex_coord2dv;
    void *multi_tex_coord2f;
    void *multi_tex_coord2fv;
    void *multi_tex_coord2i;
    void *multi_tex_coord2iv;
    void *multi_tex_coord2s;
    void *multi_tex_coord2sv;
    void *multi_tex_coord3d;
    void *multi_tex_coord3dv;
    void *multi_tex_coord3f;
    void *multi_tex_coord3fv;
    void *multi_tex_coord3i;
    void *multi_tex_coord3iv;
    void *multi_tex_coord3s;
    void *multi_tex_coord3sv;
    void *multi_tex_coord4d;
    void *multi_tex_coord4dv;
    void *multi_tex_coord4f;
    void *multi_tex_coord4fv;
    void *multi_tex_coord4i;
    void *multi_tex_coord4iv;
    void *multi_tex_coord4s;
    void *multi_tex_coord4sv;
    void *load_transpose_matrixd;
    void *load_transpose_matrixf;
    void *mult_transpose_matrixd;
    void *mult_transpose_matrixf;
    void *compressed_tex_image3D;
    void *compressed_tex_image2D;
    void *compressed_tex_image1D;
    void *compressed_tex_sub_image3D;
    void *compressed_tex_sub_image2D;
    void *compressed_tex_sub_image1D;
    void *get_compressed_tex_image;
    void *secondary_color3b;
    void *secondary_color3bv;
    void *secondary_color3d;
    void *secondary_color3dv;
    void *secondary_color3f;
    void *secondary_color3fv;
    void *secondary_color3i;
    void *secondary_color3iv;
    void *secondary_color3s;
    void *secondary_color3sv;
    void *secondary_color3ub;
    void *secondary_color3ubv;
    void *secondary_color3ui;
    void *secondary_color3uiv;
    void *secondary_color3us;
    void *secondary_color3usv;
    void *secondary_color_pointer;
    void *vertex_array_range_EXT;
    void *flush_vertex_array_range_EXT;
    void *draw_range_elements;
    void *color_table;
    void *color_table_parameterfv;
    void *color_table_parameteriv;
    void *copy_color_table;
    void *get_color_table;
    void *get_color_table_parameterfv;
    void *get_color_table_parameteriv;
    void *color_sub_table;
    void *copy_color_sub_table;
    void *convolution_filter1D;
    void *convolution_filter2D;
    void *convolution_parameterf;
    void *convolution_parameterfv;
    void *convolution_parameteri;
    void *convolution_parameteriv;
    void *copy_convolution_filter1D;
    void *copy_convolution_filter2D;
    void *get_convolution_filter;
    void *get_convolution_parameterfv;
    void *get_convolution_parameteriv;
    void *get_separable_filter;
    void *separable_filter2D;
    void *get_histogram;
    void *get_histogram_parameterfv;
    void *get_histogram_parameteriv;
    void *get_minmax;
    void *get_minmax_parameterfv;
    void *get_minmax_parameteriv;
    void *histogram;
    void *minmax;
    void *reset_histogram;
    void *reset_minmax;
    void *tex_image3D;
    void *tex_sub_image3D;
    void *copy_tex_sub_image3D;
    void *get_uniform_indices;
    void *get_active_uniformsiv;
    void *get_active_uniform_name;
    void *get_uniform_block_index;
    void *get_active_uniform_blockiv;
    void *get_active_uniform_block_name;
    void *uniform_block_binding;
    void *get_combiner_input_parameterfv_NV;
    void *get_combiner_input_parameteriv_NV;
    void *get_combiner_output_parameterfv_NV;
    void *get_combiner_output_parameteriv_NV;
    void *get_final_combiner_input_parameterfv_NV;
    void *get_final_combiner_input_parameteriv_NV;
    void *combiner_stage_parameterfv_NV;
    void *get_combiner_stage_parameterfv_NV;
    void *texture_range_APPLE;
    void *get_tex_parameter_pointerv_APPLE;
    void *blend_equation_separate_EXT;
    void *sample_coverage;
    void *sample_pass;
    void *pn_trianglesi_ATI;
    void *pn_trianglesf_ATI;
    void *gen_fences_APPLE;
    void *delete_fences_APPLE;
    void *set_fence_APPLE;
    void *is_fence_APPLE;
    void *test_fence_APPLE;
    void *finish_fence_APPLE;
    void *test_object_APPLE;
    void *finish_object_APPLE;
    void *bind_program_ARB;
    void *delete_programs_ARB;
    void *gen_programs_ARB;
    void *is_program_ARB;
    void *vertex_attrib1s_ARB;
    void *vertex_attrib1f_ARB;
    void *vertex_attrib1d_ARB;
    void *vertex_attrib2s_ARB;
    void *vertex_attrib2f_ARB;
    void *vertex_attrib2d_ARB;
    void *vertex_attrib3s_ARB;
    void *vertex_attrib3f_ARB;
    void *vertex_attrib3d_ARB;
    void *vertex_attrib4s_ARB;
    void *vertex_attrib4f_ARB;
    void *vertex_attrib4d_ARB;
    void *vertex_attrib4Nub_ARB;
    void *vertex_attrib1sv_ARB;
    void *vertex_attrib1fv_ARB;
    void *vertex_attrib1dv_ARB;
    void *vertex_attrib2sv_ARB;
    void *vertex_attrib2fv_ARB;
    void *vertex_attrib2dv_ARB;
    void *vertex_attrib3sv_ARB;
    void *vertex_attrib3fv_ARB;
    void *vertex_attrib3dv_ARB;
    void *vertex_attrib4bv_ARB;
    void *vertex_attrib4sv_ARB;
    void *vertex_attrib4iv_ARB;
    void *vertex_attrib4ubv_ARB;
    void *vertex_attrib4usv_ARB;
    void *vertex_attrib4uiv_ARB;
    void *vertex_attrib4fv_ARB;
    void *vertex_attrib4dv_ARB;
    void *vertex_attrib4Nbv_ARB;
    void *vertex_attrib4Nsv_ARB;
    void *vertex_attrib4Niv_ARB;
    void *vertex_attrib4Nubv_ARB;
    void *vertex_attrib4Nusv_ARB;
    void *vertex_attrib4Nuiv_ARB;
    void *vertex_attrib_pointer_ARB;
    void *enable_vertex_attrib_array_ARB;
    void *disable_vertex_attrib_array_ARB;
    void *get_vertex_attribdv_ARB;
    void *get_vertex_attribfv_ARB;
    void *get_vertex_attribiv_ARB;
    void *get_vertex_attrib_pointerv_ARB;
    void *program_env_parameter4d_ARB;
    void *program_env_parameter4dv_ARB;
    void *program_env_parameter4f_ARB;
    void *program_env_parameter4fv_ARB;
    void *program_local_parameter4d_ARB;
    void *program_local_parameter4dv_ARB;
    void *program_local_parameter4f_ARB;
    void *program_local_parameter4fv_ARB;
    void *get_program_env_parameterdv_ARB;
    void *get_program_env_parameterfv_ARB;
    void *get_program_local_parameterdv_ARB;
    void *get_program_local_parameterfv_ARB;
    void *program_string_ARB;
    void *get_program_string_ARB;
    void *get_programiv_ARB;
    void *enable_vertex_attrib_ARB;
    void *disable_vertex_attrib_ARB;
    void *is_vertex_attrib_enabled_ARB;
    void *map_vertex_attrib1d_ARB;
    void *map_vertex_attrib1f_ARB;
    void *map_vertex_attrib2d_ARB;
    void *map_vertex_attrib2f_ARB;
    void *point_parameterf;
    void *point_parameterfv;
    void *point_parameteri;
    void *point_parameteriv;
    void *fog_coordf;
    void *fog_coordfv;
    void *fog_coordd;
    void *fog_coorddv;
    void *fog_coord_pointer;
    void *vertex_array_parameteri_EXT;
    void *bind_vertex_array_EXT;
    void *delete_vertex_arrays_EXT;
    void *gen_vertex_arrays_EXT;
    void *is_vertex_array_EXT;
    void *element_pointer_APPLE;
    void *draw_element_array_APPLE;
    void *draw_range_element_array_APPLE;
    void *weightbv_ARB;
    void *weightsv_ARB;
    void *weightiv_ARB;
    void *weightfv_ARB;
    void *weightdv_ARB;
    void *weightubv_ARB;
    void *weightusv_ARB;
    void *weightuiv_ARB;
    void *weight_pointer_ARB;
    void *vertex_blend_ARB;
    void *multi_draw_arrays;
    void *multi_draw_elements;
    void *window_pos2d;
    void *window_pos2dv;
    void *window_pos2f;
    void *window_pos2fv;
    void *window_pos2i;
    void *window_pos2iv;
    void *window_pos2s;
    void *window_pos2sv;
    void *window_pos3d;
    void *window_pos3dv;
    void *window_pos3f;
    void *window_pos3fv;
    void *window_pos3i;
    void *window_pos3iv;
    void *window_pos3s;
    void *window_pos3sv;
    void *active_stencil_face_EXT;
    void *stencil_op_separate_ATI;
    void *stencil_func_separate_ATI;
    void *flush_render_APPLE;
    void *finish_render_APPLE;
    void *swap_APPLE;
    void *delete_object_ARB;
    void *get_handle_ARB;
    void *detach_object_ARB;
    void *create_shader_object_ARB;
    void *shader_source_ARB;
    void *compile_shader_ARB;
    void *create_program_object_ARB;
    void *attach_object_ARB;
    void *link_program_ARB;
    void *use_program_object_ARB;
    void *validate_program_ARB;
    void *uniform1f_ARB;
    void *uniform2f_ARB;
    void *uniform3f_ARB;
    void *uniform4f_ARB;
    void *uniform1i_ARB;
    void *uniform2i_ARB;
    void *uniform3i_ARB;
    void *uniform4i_ARB;
    void *uniform1fv_ARB;
    void *uniform2fv_ARB;
    void *uniform3fv_ARB;
    void *uniform4fv_ARB;
    void *uniform1iv_ARB;
    void *uniform2iv_ARB;
    void *uniform3iv_ARB;
    void *uniform4iv_ARB;
    void *uniform_matrix2fv_ARB;
    void *uniform_matrix3fv_ARB;
    void *uniform_matrix4fv_ARB;
    void *get_object_parameterfv_ARB;
    void *get_object_parameteriv_ARB;
    void *get_info_log_ARB;
    void *get_attached_objects_ARB;
    void *get_uniform_location_ARB;
    void *get_active_uniform_ARB;
    void *get_uniformfv_ARB;
    void *get_uniformiv_ARB;
    void *get_shader_source_ARB;
    void *bind_attrib_location_ARB;
    void *get_active_attrib_ARB;
    void *get_attrib_location_ARB;
    void *clamp_color_ARB;
    void *gen_queries;
    void *delete_queries;
    void *is_query;
    void *begin_query;
    void *end_query;
    void *get_queryiv;
    void *get_query_objectiv;
    void *get_query_objectuiv;
    void *bind_buffer;
    void *delete_buffers;
    void *gen_buffers;
    void *is_buffer;
    void *buffer_data;
    void *buffer_sub_data;
    void *get_buffer_sub_data;
    void *map_buffer;
    void *unmap_buffer;
    void *get_buffer_parameteriv;
    void *get_buffer_pointerv;
    void *depth_bounds_EXT;
    void *draw_buffers_ARB;
    void *is_shader;
    void *is_program;
    void *get_shaderiv;
    void *get_programiv;
    void *get_shader_info_log;
    void *get_program_info_log;
    void *stencil_func_separate;
    void *stencil_mask_separate;
    void *multi_draw_element_array_APPLE;
    void *multi_draw_range_element_array_APPLE;
    void *is_renderbuffer_EXT;
    void *bind_renderbuffer_EXT;
    void *delete_renderbuffers_EXT;
    void *gen_renderbuffers_EXT;
    void *renderbuffer_storage_EXT;
    void *get_renderbuffer_parameteriv_EXT;
    void *is_framebuffer_EXT;
    void *bind_framebuffer_EXT;
    void *delete_framebuffers_EXT;
    void *gen_framebuffers_EXT;
    void *check_framebuffer_status_EXT;
    void *framebuffer_texture1D_EXT;
    void *framebuffer_texture2D_EXT;
    void *framebuffer_texture3D_EXT;
    void *framebuffer_renderbuffer_EXT;
    void *get_framebuffer_attachment_parameteriv_EXT;
    void *generate_mipmap_EXT;
    void *buffer_parameteri_APPLE;
    void *flush_mapped_buffer_range_APPLE;
    void *program_env_parameters4fv_EXT;
    void *program_local_parameters4fv_EXT;
    void *object_purgeable_APPLE;
    void *object_unpurgeable_APPLE;
    void *get_object_parameteriv_APPLE;
    void *program_parameteri_EXT;
    void *framebuffer_texture_EXT;
    void *framebuffer_texture_layer_EXT;
    void *framebuffer_texture_face_EXT;
    void *bind_buffer_range_EXT;
    void *bind_buffer_offset_EXT;
    void *bind_buffer_base_EXT;
    void *begin_transform_feedback_EXT;
    void *end_transform_feedback_EXT;
    void *transform_feedback_varyings_EXT;
    void *get_transform_feedback_varying_EXT;
    void *get_integer_indexedv_EXT;
    void *get_boolean_indexedv_EXT;
    void *uniform_buffer_EXT;
    void *get_uniform_buffer_size_EXT;
    void *get_uniform_buffer_offset_EXT;
    void *clear_colorIi_EXT;
    void *clear_colorIui_EXT;
    void *tex_parameterIiv_EXT;
    void *tex_parameterIuiv_EXT;
    void *get_tex_parameterIiv_EXT;
    void *get_tex_parameterIuiv_EXT;
    void *vertex_attribI1i_EXT;
    void *vertex_attribI2i_EXT;
    void *vertex_attribI3i_EXT;
    void *vertex_attribI4i_EXT;
    void *vertex_attribI1ui_EXT;
    void *vertex_attribI2ui_EXT;
    void *vertex_attribI3ui_EXT;
    void *vertex_attribI4ui_EXT;
    void *vertex_attribI1iv_EXT;
    void *vertex_attribI2iv_EXT;
    void *vertex_attribI3iv_EXT;
    void *vertex_attribI4iv_EXT;
    void *vertex_attribI1uiv_EXT;
    void *vertex_attribI2uiv_EXT;
    void *vertex_attribI3uiv_EXT;
    void *vertex_attribI4uiv_EXT;
    void *vertex_attribI4bv_EXT;
    void *vertex_attribI4sv_EXT;
    void *vertex_attribI4ubv_EXT;
    void *vertex_attribI4usv_EXT;
    void *vertex_attribI_pointer_EXT;
    void *get_vertex_attribIiv_EXT;
    void *get_vertex_attribIuiv_EXT;
    void *uniform1ui_EXT;
    void *uniform2ui_EXT;
    void *uniform3ui_EXT;
    void *uniform4ui_EXT;
    void *uniform1uiv_EXT;
    void *uniform2uiv_EXT;
    void *uniform3uiv_EXT;
    void *uniform4uiv_EXT;
    void *get_uniformuiv_EXT;
    void *bind_frag_data_location_EXT;
    void *get_frag_data_location_EXT;
    void *color_mask_indexed_EXT;
    void *enable_indexed_EXT;
    void *disable_indexed_EXT;
    void *is_enabled_indexed_EXT;
    void *uniform_matrix2x3fv;
    void *uniform_matrix3x2fv;
    void *uniform_matrix2x4fv;
    void *uniform_matrix4x2fv;
    void *uniform_matrix3x4fv;
    void *uniform_matrix4x3fv;
    void *blit_framebuffer_EXT;
    void *renderbuffer_storage_multisample_EXT;
    void *begin_conditional_render_NV;
    void *end_conditional_render_NV;
    void *get_attached_shaders;
    void *provoking_vertex_EXT;
    void *vertex_attrib_divisor;
    void *draw_arrays_instanced;
    void *draw_elements_instanced;
    void *draw_elements_base_vertex;
    void *draw_range_elements_base_vertex;
    void *draw_elements_instanced_base_vertex;
    void *multi_draw_elements_base_vertex;
    void *bind_vertex_array_ARB;
    void *delete_vertex_arrays_ARB;
    void *gen_vertex_arrays_ARB;
    void *is_vertex_array_ARB;
    void *vertex_point_sizef_APPLE;
    void *clear_bufferiv;
    void *clear_bufferuiv;
    void *clear_bufferfv;
    void *clear_bufferfi;
    void *get_stringi;
    void *tex_image2D_multisample;
    void *tex_image3D_multisample;
    void *get_multisamplefv;
    void *sample_maski;
    void *tex_buffer;
    void *copy_buffer_sub_data;
    void *primitive_restart_index;
    void *get_query_objecti64v;
    void *get_query_objectui64v;
    void *map_buffer_range;
    void *flush_mapped_buffer_range;
    void *query_counter;
    void *get_integer64i_v;
    void *get_buffer_parameteri64v;
    void *gen_samplers;
    void *delete_samplers;
    void *is_sampler;
    void *bind_sampler;
    void *sampler_parameteri;
    void *sampler_parameteriv;
    void *sampler_parameterf;
    void *sampler_parameterfv;
    void *sampler_parameterIiv;
    void *sampler_parameterIuiv;
    void *get_sampler_parameteriv;
    void *get_sampler_parameterfv;
    void *get_sampler_parameterIiv;
    void *get_sampler_parameterIuiv;
    void *label_object_EXT;
    void *get_object_label_EXT;
    void *insert_event_marker_EXT;
    void *push_group_marker_EXT;
    void *pop_group_marker_EXT;
    void *use_program_stages;
    void *active_shader_program;
    void *create_shader_programv;
    void *bind_program_pipeline;
    void *delete_program_pipelines;
    void *gen_program_pipelines;
    void *is_program_pipeline;
    void *get_program_pipelineiv;
    void *validate_program_pipeline;
    void *get_program_pipeline_info_log;
    void *program_uniform1i;
    void *program_uniform2i;
    void *program_uniform3i;
    void *program_uniform4i;
    void *program_uniform1f;
    void *program_uniform2f;
    void *program_uniform3f;
    void *program_uniform4f;
    void *program_uniform1iv;
    void *program_uniform2iv;
    void *program_uniform3iv;
    void *program_uniform4iv;
    void *program_uniform1fv;
    void *program_uniform2fv;
    void *program_uniform3fv;
    void *program_uniform4fv;
    void *program_uniform_matrix2fv;
    void *program_uniform_matrix3fv;
    void *program_uniform_matrix4fv;
    void *alpha_funcx;
    void *clear_colorx;
    void *clear_depthf;
    void *clear_depthx;
    void *clip_planef;
    void *clip_planex;
    void *color4x;
    void *depth_rangef;
    void *depth_rangex;
    void *fogx;
    void *fogxv;
    void *frustumf;
    void *frustumx;
    void *get_clip_planef;
    void *get_clip_planex;
    void *get_fixedv;
    void *get_lightxv;
    void *get_materialxv;
    void *get_tex_envxv;
    void *get_tex_parameterxv;
    void *light_modelx;
    void *light_modelxv;
    void *lightx;
    void *lightxv;
    void *line_widthx;
    void *load_matrixx;
    void *materialx;
    void *materialxv;
    void *mult_matrixx;
    void *normal3x;
    void *orthof;
    void *orthox;
    void *point_sizex;
    void *polygon_offsetx;
    void *rotatex;
    void *scalex;
    void *tex_envx;
    void *tex_envxv;
    void *tex_parameterx;
    void *tex_parameterxv;
    void *translatex;
    void *multi_tex_coord4x;
    void *sample_coveragex;
    void *point_parameterx;
    void *point_parameterxv;
    void *point_size_pointer;
    void *current_palette_matrix_OES;
    void *load_palette_from_modelview_matrix_OES;
    void *matrix_index_pointer_OES;
    void *weight_pointer_OES;
    void *drawtexs_OES;
    void *drawtexi_OES;
    void *drawtexx_OES;
    void *drawtexsv_OES;
    void *drawtexiv_OES;
    void *drawtexxv_OES;
    void *drawtexf_OES;
    void *drawtexfv_OES;
    void *shader_binary_OES;
    void *get_shader_precision_format_OES;
    void *release_shader_compiler_OES;
    void *discard_framebuffer_EXT;
    void *framebuffer_parameteri_APPLE;
    void *get_framebuffer_parameteri_APPLE;
    void *resolve_multisample_framebuffer_APPLE;
};

