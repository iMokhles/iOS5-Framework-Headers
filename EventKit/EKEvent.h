/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <EventKit/EKCalendarItem.h>

@class EKCalendarDate, EKParticipant, EKRecurrenceRule, NSDate, NSNumber, NSString;

@interface EKEvent : EKCalendarItem
{
    EKCalendarDate *_occurrenceStartDate;
    EKCalendarDate *_occurrenceEndDate;
    BOOL _occurrenceIsAllDay;
    EKCalendarDate *_originalOccurrenceStartDate;
    EKCalendarDate *_originalOccurrenceEndDate;
    NSNumber *_originalOccurrenceIsAllDay;
}

+ (id)eventWithEventStore:(id)arg1;
@property(copy, nonatomic) NSNumber *originalOccurrenceIsAllDay; // @synthesize originalOccurrenceIsAllDay=_originalOccurrenceIsAllDay;
@property(copy, nonatomic) EKCalendarDate *originalOccurrenceEndDate; // @synthesize originalOccurrenceEndDate=_originalOccurrenceEndDate;
@property(copy, nonatomic) EKCalendarDate *originalOccurrenceStartDate; // @synthesize originalOccurrenceStartDate=_originalOccurrenceStartDate;
@property(nonatomic) BOOL occurrenceIsAllDay; // @synthesize occurrenceIsAllDay=_occurrenceIsAllDay;
@property(copy, nonatomic) EKCalendarDate *occurrenceEndDate; // @synthesize occurrenceEndDate=_occurrenceEndDate;
@property(copy, nonatomic) EKCalendarDate *occurrenceStartDate; // @synthesize occurrenceStartDate=_occurrenceStartDate;
- (void)_detachWithStartDate:(id)arg1 newStartDate:(id)arg2 future:(BOOL)arg3;
- (BOOL)removeWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)_isInitialOccurrenceDate:(id)arg1;
- (BOOL)_cancelWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)_deleteWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)_shouldCancelInsteadOfDeleteWithSpan:(int)arg1;
- (BOOL)_checkStartDateConstraintAgainstDate:(CDStruct_b0fa4487)arg1 timeZone:(id)arg2 error:(id *)arg3;
- (BOOL)_occurrenceExistsOnDate:(double)arg1 timeZone:(id)arg2;
- (BOOL)_validateAlarmIntervalConstrainedToRecurrenceInterval:(int)arg1;
- (BOOL)_validateDurationConstrainedToRecurrenceInterval;
- (BOOL)_validateDatesAndRecurrencesGivenSpan:(int)arg1 error:(id *)arg2;
- (void)rollback;
- (void)revert;
- (void)didCommit;
- (id)dirtyPropertiesToSkip;
- (BOOL)commitWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)validateWithSpan:(int)arg1 error:(id *)arg2;
- (BOOL)refresh;
- (id)description;
- (BOOL)canBeRespondedTo;
- (BOOL)allowsAlarmModifications;
- (BOOL)hasSelfAttendee;
- (BOOL)canSetAvailability;
- (id)uniqueId;
- (id)externalId;
- (int)pendingParticipationStatus;
- (BOOL)canDetachSingleOccurrence;
- (BOOL)requiresDetach;
- (BOOL)responseMustApplyToAll;
- (BOOL)allowsCalendarModifications;
- (BOOL)allowsRecurrenceModifications;
@property(readonly, nonatomic) BOOL isDetached;
- (int)compareStartDateWithEvent:(id)arg1;
- (BOOL)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id *)arg3;
- (BOOL)isTentative;
- (void)clearReadState;
- (void)setReadState:(unsigned int)arg1;
- (unsigned int)readState;
- (void)setResponseComment:(id)arg1;
- (id)responseComment;
@property(nonatomic) int availability;
@property(retain, nonatomic) EKRecurrenceRule *recurrenceRule;
- (id)attachments;
- (int)alarmCount;
- (int)attendeeCount;
@property(readonly, nonatomic) EKParticipant *organizer;
- (id)attendees;
@property(readonly, nonatomic) int birthdayPersonID;
- (int)_parentParticipationStatus;
- (void)setParticipationStatus:(int)arg1;
- (int)participationStatus;
- (void)setNeedsOccurrenceCacheUpdate:(BOOL)arg1;
- (BOOL)needsOccurrenceCacheUpdate;
- (void)setModifiedProperties:(unsigned int)arg1;
- (unsigned int)modifiedProperties;
@property(readonly, nonatomic) int status;
- (CDStruct_b0fa4487)endDatePinnedForAllDay;
- (CDStruct_b0fa4487)startDatePinnedForAllDay;
- (CDStruct_b0fa4487)endDateGr;
- (CDStruct_b0fa4487)startDateGr;
- (id)initialEndDate;
- (id)occurrenceDate;
- (id)initialStartDate;
- (id)_effectiveTimeZone;
- (void)setTimeZone:(id)arg1;
@property(copy, nonatomic) NSDate *endDate;
- (id)endCalendarDate;
- (double)duration;
@property(copy, nonatomic) NSDate *startDate;
- (id)startCalendarDate;
@property(nonatomic, getter=isAllDay) BOOL allDay;
- (BOOL)_isAllDay;
- (id)birthdayTitleWithAddressBook:(void *)arg1;
- (id)committedValueForKey:(id)arg1;
- (void)_sendModifiedNote;
- (BOOL)isDirtyIgnoringCalendar;
- (BOOL)isEndDateDirty;
- (BOOL)isStartDateDirty;
- (BOOL)isStatusDirty;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)exportToICS;
- (id)eventStore;
- (id)externalURL;
@property(readonly, nonatomic) NSString *eventIdentifier;
- (void)dealloc;
- (id)_persistentEvent;
- (id)initWithPersistentObject:(id)arg1 occurrenceDate:(id)arg2;
- (id)initWithPersistentObject:(id)arg1;
- (id)initWithEventStore:(id)arg1;
- (id)init;

@end

