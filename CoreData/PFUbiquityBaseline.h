/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSDictionary, NSManagedObjectModel, NSMutableDictionary, NSString, PFUbiquityBaselineMetadata, PFUbiquityLocation, _PFZipFileArchive;

@interface PFUbiquityBaseline : NSObject
{
    PFUbiquityLocation *_ubiquityRootLocation;
    PFUbiquityLocation *_baselineArchiveLocation;
    PFUbiquityLocation *_baselineStagingLocation;
    PFUbiquityBaselineMetadata *_metadata;
    NSMutableDictionary *_storeFilenameToData;
    NSString *_storeFilename;
    NSString *_storeName;
    NSString *_modelVersionHash;
    NSManagedObjectModel *_model;
    _PFZipFileArchive *_baselineArchive;
}

+ (BOOL)enoughTransactionsHavePassedToRollBaseline:(id)arg1 withLocalPeerID:(id)arg2 error:(id *)arg3;
+ (BOOL)logsConsumeEnoughDiskSpaceToRollBaseline:(id)arg1 withLocalPeerID:(id)arg2 andStoreURL:(id)arg3 error:(id *)arg4;
+ (BOOL)canRollBaselineForStoreMetadata:(id)arg1 withStack:(id)arg2 andManagedObjectModel:(id)arg3 error:(id *)arg4;
+ (BOOL)checkPeerReceiptsUnderRootLocation:(id)arg1 forAgreementWithLocalPeerID:(id)arg2 storeName:(id)arg3 modelVersionHash:(id)arg4 error:(id *)arg5;
+ (id)createBaselineOptimizedModelForStoreName:(id)arg1 modelVersionHash:(id)arg2 andUbiquityRootLocation:(id)arg3;
+ (id)createBaselineGCModelForStoreName:(id)arg1 modelVersionHash:(id)arg2 andUbiquityRootLocation:(id)arg3;
+ (id)createModelFromBaselineModelWithStoreMetadata:(id)arg1;
+ (id)metadataFromCurrentBaselineForStoreWithName:(id)arg1 modelVersionHash:(id)arg2 andUbiquityRootLocation:(id)arg3 withError:(id *)arg4;
+ (unsigned int)numRequiredTransactionsForBaselineRoll;
+ (void)setNumRequiredTransactionsForBaselineRoll:(unsigned int)arg1;
+ (double)requiredFractionOfDiskSpaceUsedForLogs;
+ (void)setRequiredFractionOfDiskSpaceUsedForLogs:(double)arg1;
- (id)init;
- (id)initWithUbiquityRootLocation:(id)arg1 forStoreWithName:(id)arg2 andManagedObjectModel:(id)arg3;
- (id)initWithBaselinePath:(id)arg1;
- (void)dealloc;
- (id)description;
- (BOOL)clearOutStagingLocationWithError:(id *)arg1;
- (BOOL)prepareForBaselineRollOfPersistentStore:(id)arg1 withStoreMetadata:(id)arg2 andLocalPeerID:(id)arg3 error:(id *)arg4;
- (BOOL)gatherContentsFromMigratedBaseline:(id)arg1 withStoreFileURL:(id)arg2 error:(id *)arg3;
- (BOOL)gatherContentsAndConstructArchiveWithError:(id *)arg1;
- (BOOL)constructBaselineArchive:(id *)arg1;
- (BOOL)loadBaselineArchiveWithError:(id *)arg1;
- (BOOL)unpackStoreFilesToStagingLocation:(id *)arg1;
- (BOOL)replaceLocalPersistentStoreDescribedByStoreMetadata:(id)arg1 usingPersistentStoreCoordinator:(id)arg2 error:(id *)arg3;
- (BOOL)existsInCloud;
- (BOOL)importBaselineWithLocalPeerID:(id)arg1 stack:(id)arg2 andPersistentStoreCoordinator:(id)arg3 error:(id *)arg4;
- (BOOL)makeCurrentBaselineWithError:(id *)arg1;
- (BOOL)writeArchiveContentsToDiskWithError:(id *)arg1;
- (BOOL)initializeBaselineArchiveWithError:(id *)arg1;
- (id)baselineMetadataData;
- (id)optimizedModelData;
- (id)regularModelData;
- (id)storeData;
- (id)createManagedObjectModel;
@property(readonly) _PFZipFileArchive *baselineArchive; // @synthesize baselineArchive=_baselineArchive;
@property(readonly) NSString *modelVersionHash; // @synthesize modelVersionHash=_modelVersionHash;
@property(readonly) NSString *storeName; // @synthesize storeName=_storeName;
@property(readonly) NSDictionary *storeFilenameToData; // @synthesize storeFilenameToData=_storeFilenameToData;
@property(readonly) NSString *storeFilename; // @synthesize storeFilename=_storeFilename;
@property(readonly) PFUbiquityBaselineMetadata *metadata; // @synthesize metadata=_metadata;
@property(readonly) PFUbiquityLocation *baselineStagingLocation; // @synthesize baselineStagingLocation=_baselineStagingLocation;
@property(readonly) PFUbiquityLocation *baselineArchiveLocation; // @synthesize baselineArchiveLocation=_baselineArchiveLocation;
@property(readonly) PFUbiquityLocation *ubiquityRootLocation; // @synthesize ubiquityRootLocation=_ubiquityRootLocation;

@end

